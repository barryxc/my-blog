<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客</title>
  <icon>https://xuechuang.cc/icon.png</icon>
  
  <link href="https://xuechuang.cc/atom.xml" rel="self"/>
  
  <link href="https://xuechuang.cc/"/>
  <updated>2025-08-06T08:59:24.032Z</updated>
  <id>https://xuechuang.cc/</id>
  
  <author>
    <name>barry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ELF各个段含义</title>
    <link href="https://xuechuang.cc/2025/08/06/elf%E5%90%84%E4%B8%AA%E6%AE%B5%E5%90%AB%E4%B9%89/"/>
    <id>https://xuechuang.cc/2025/08/06/elf%E5%90%84%E4%B8%AA%E6%AE%B5%E5%90%AB%E4%B9%89/</id>
    <published>2025-08-05T16:00:00.000Z</published>
    <updated>2025-08-06T08:59:24.032Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-ELF文件结构&quot;&gt;&lt;a href=&quot;#1-ELF文件结构&quot; class=&quot;headerlink&quot; title=&quot;1. ELF文件结构&quot;&gt;&lt;/a&gt;1. ELF文件结构&lt;/h2&gt;&lt;p&gt;​        ELF文件的格式大致如下，其中比较重要的时文件头和段表：文件头描述文件的基本信息；段表类似所有段即section的指针表。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/image.png&quot; alt=&quot;../images/elf.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ELF&lt;/strong&gt; &lt;strong&gt;Header：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​        可以使用&lt;code&gt;readelf -h main.o&lt;/code&gt;查看可执行文件中的header，ELF Header 中定义了 ELF Magic Code、文件机器字节长度、数据存储方式、版本、运行平台、ABI 版本、ELF 重定位类型、硬件平台、硬件平台版本、入口地址、程序头入口与长度、Section Header 的偏移位置和长度以及 Section 数量等。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ELF Header:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Magic:   &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;f &lt;span class=&quot;number&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;c &lt;span class=&quot;number&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Class:                             ELF64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Data:                              &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;s complement, little endian&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Version:                           1 (current)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  OS/ABI:                            UNIX - System V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  ABI Version:                       0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Type:                              REL (Relocatable file)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Machine:                           Advanced Micro Devices X86-64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Version:                           0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Entry point address:               0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Start of program headers:          0 (bytes into file)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Start of section headers:          1000 (bytes into file)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Flags:                             0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Size of this header:               64 (bytes)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Size of program headers:           0 (bytes)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Number of program headers:         0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Size of section headers:           64 (bytes)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Number of section headers:         15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  Section header string table index: 14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;段表：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​        段表顾名思义，存储不同段的地方，实际存储的是段的描述符，该描述符会描述段的类型，大小等信息。可通过&lt;code&gt;readelf -S main.o&lt;/code&gt;查看，因为下面需要用到一些段因此贴到这里。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;There &lt;span class=&quot;keyword&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt; section headers, starting &lt;span class=&quot;keyword&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0x3e8&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Section Headers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [Nr] Name              Type             Address           &lt;span class=&quot;keyword&quot;&gt;Offset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Size              EntSize          Flags  Link  Info  Align&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]                   &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;             &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;           &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] .text             PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000040&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;000000000000003&lt;/span&gt;e  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  AX       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] .rela.text        RELA             &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000310&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000018&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000018&lt;/span&gt;   I      &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] .data             PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000080&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000005&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  WA       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] .bss              NOBITS           &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000088&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000005&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  WA       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] .rodata           PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000088&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000007&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;   A       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] .data.rel.local   PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000090&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000008&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  WA       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;] .rela.data.rel.lo RELA             &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000328&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000018&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000018&lt;/span&gt;   I      &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;] .comment          PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000098&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;000000000000002&lt;/span&gt;a  &lt;span class=&quot;number&quot;&gt;0000000000000001&lt;/span&gt;  MS       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;] .note.GNU&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;stack   PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;000000&lt;/span&gt;c2 &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;           &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] .eh_frame         PROGBITS         &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;000000&lt;/span&gt;c8 &lt;span class=&quot;number&quot;&gt;0000000000000058&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;   A       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;] .rela.eh_frame    RELA             &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000340&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000030&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000018&lt;/span&gt;   I      &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;] .symtab           SYMTAB           &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000120&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000198&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000018&lt;/span&gt;          &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;] .strtab           STRTAB           &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;000002&lt;/span&gt;b8 &lt;span class=&quot;number&quot;&gt;0000000000000051&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;           &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;] .shstrtab         STRTAB           &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;00000370&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0000000000000076&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0000000000000000&lt;/span&gt;           &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Key &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; Flags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  W (write), A (alloc), X (&lt;span class=&quot;keyword&quot;&gt;execute&lt;/span&gt;), M (&lt;span class=&quot;keyword&quot;&gt;merge&lt;/span&gt;), S (strings), I (info),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  L (link &lt;span class=&quot;keyword&quot;&gt;order&lt;/span&gt;), O (extra OS processing required), G (&lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt;), T (TLS),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  C (compressed), x (&lt;span class=&quot;literal&quot;&gt;unknown&lt;/span&gt;), o (OS &lt;span class=&quot;keyword&quot;&gt;specific&lt;/span&gt;), E (exclude),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  l (&lt;span class=&quot;keyword&quot;&gt;large&lt;/span&gt;), p (processor &lt;span class=&quot;keyword&quot;&gt;specific&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="c++" scheme="https://xuechuang.cc/categories/c/"/>
    
    
    <category term="c++" scheme="https://xuechuang.cc/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="https://xuechuang.cc/2024/04/06/native%E8%B0%83%E8%AF%95/"/>
    <id>https://xuechuang.cc/2024/04/06/native%E8%B0%83%E8%AF%95/</id>
    <published>2024-04-06T11:45:40.000Z</published>
    <updated>2024-04-06T11:48:39.402Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Native-调试总结&quot;&gt;&lt;a href=&quot;#Native-调试总结&quot; class=&quot;headerlink&quot; title=&quot;Native 调试总结&quot;&gt;&lt;/a&gt;Native 调试总结&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;debug so 才可以调试，release so 不可以调试。&lt;/li&gt;
&lt;li&gt;还原堆栈需要 &amp;#x2F;build&amp;#x2F;intermediates&amp;#x2F;cmake目录下的 so 才可以&lt;/li&gt;
&lt;li&gt;使用 sdk 工程调试另外一个 app 时需要修改 sdk工程中的 app 模块的包名和调试的 apk 一致。&lt;/li&gt;
&lt;li&gt;通过 dlopen() 的 so，默认不执行 jni_onload，只有 java层的 system.loadlibrary()才会执行。想要执行 jni_onload 执行 so 库初始化，需要手动调用 java 层的加载机制。&lt;/li&gt;
&lt;li&gt;dlsym()函数获取符号地址时，要保证 so 的符号被导出。可以通过 nm -D  xx.so 命令查看是否有对应的符号&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="debug" scheme="https://xuechuang.cc/categories/debug/"/>
    
    
  </entry>
  
  <entry>
    <title>创建mac应用</title>
    <link href="https://xuechuang.cc/2024/04/05/%E5%88%9B%E5%BB%BAmac%E5%BA%94%E7%94%A8/"/>
    <id>https://xuechuang.cc/2024/04/05/%E5%88%9B%E5%BB%BAmac%E5%BA%94%E7%94%A8/</id>
    <published>2024-04-05T06:48:41.000Z</published>
    <updated>2024-04-05T06:59:33.472Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;如何为一个-sh-脚本创建-mac-应用程序？&quot;&gt;&lt;a href=&quot;#如何为一个-sh-脚本创建-mac-应用程序？&quot; class=&quot;headerlink&quot; title=&quot;如何为一个 sh 脚本创建 mac 应用程序？&quot;&gt;&lt;/a&gt;如何为一个 sh 脚本创建 mac 应用程序？&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;创建捆绑包目录结构&lt;/strong&gt;： 在 Finder 中，创建一个新的文件夹来作为应用程序捆绑包的根目录，并以 &lt;code&gt;.app&lt;/code&gt; 扩展名命名，例如 &lt;code&gt;MyShellApp.app&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建 Contents 目录&lt;/strong&gt;： 在 &lt;code&gt;MyShellApp.app&lt;/code&gt; 目录内部，创建一个名为 &lt;code&gt;Contents&lt;/code&gt; 的子目录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建 MacOS 目录&lt;/strong&gt;： 在 &lt;code&gt;Contents&lt;/code&gt; 目录内部，创建一个名为 &lt;code&gt;MacOS&lt;/code&gt; 的子目录。这是可执行文件的存放位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建 Info.plist 文件&lt;/strong&gt;： 在 &lt;code&gt;Contents&lt;/code&gt; 目录中创建一个名为 &lt;code&gt;Info.plist&lt;/code&gt; 的属性列表文件。这个文件包含了应用程序的元数据。以下是一个基本的 &lt;code&gt;Info.plist&lt;/code&gt; 示例：&lt;/p&gt;</summary>
    
    
    
    <category term="mac app" scheme="https://xuechuang.cc/categories/mac-app/"/>
    
    
  </entry>
  
  <entry>
    <title>mmap机制</title>
    <link href="https://xuechuang.cc/2024/01/21/mmap%E6%9C%BA%E5%88%B6/"/>
    <id>https://xuechuang.cc/2024/01/21/mmap%E6%9C%BA%E5%88%B6/</id>
    <published>2024-01-21T14:19:25.000Z</published>
    <updated>2024-01-21T14:24:52.634Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;mmap&quot;&gt;&lt;a href=&quot;#mmap&quot; class=&quot;headerlink&quot; title=&quot;mmap&quot;&gt;&lt;/a&gt;mmap&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在 Linux 中，”mmap” 通常指的是内存映射（Memory-Mapped）机制。&lt;code&gt;mmap&lt;/code&gt; 是一个系统调用，它允许应用程序将文件或设备的内容映射到进程的地址空间。这样，文件或设备的内容就可以像访问普通内存一样进行读写操作，而无需使用传统的文件读写系统调用（如 &lt;code&gt;read()&lt;/code&gt; 和 &lt;code&gt;write()&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mmap&lt;/code&gt; 机制的本质是提供一种高效的文件访问方式，通过以下几个方面实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;直接内存访问&lt;/strong&gt;：&lt;br&gt;通过将文件内容映射到进程的虚拟内存，应用程序可以直接通过内存地址访问文件数据，这避免了传统文件 I&amp;#x2F;O 调用中的数据复制步骤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;延迟加载&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;mmap&lt;/code&gt; 创建的内存映射是按需加载的，这意味着文件的内容只有在实际访问时才会被加载到物理内存中。这可以提高对大文件的处理效率，并减少内存的使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;共享内存&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;mmap&lt;/code&gt; 可以用于创建共享内存区域，允许多个进程访问同一块内存。这是进程间通信（IPC）的一种方式，也可以用于共享文件的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;页缓存（Page Cache）&lt;/strong&gt;：&lt;br&gt;使用 &lt;code&gt;mmap&lt;/code&gt; 映射的文件数据会被操作系统的页缓存管理，这意味着频繁访问的数据可以保留在缓存中，从而加快访问速度。同时，对映射内存的修改可以延迟写回到文件，直到必要时才进行，这可以减少磁盘 I&amp;#x2F;O 操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;虚拟内存管理&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;mmap&lt;/code&gt; 依赖于操作系统的虚拟内存管理机制。当进程访问映射的内存区域时，如果对应的数据尚未加载到物理内存，操作系统会自动处理缺页中断（page fault），将数据从磁盘加载到内存中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;mmap&lt;/code&gt; 系统调用通常用于需要高效文件访问的场景，如数据库管理系统、文件编辑器、多媒体应用程序等。它也是实现内存映射文件和匿名映射（不与任何文件关联的内存区域）的基础。&lt;/p&gt;
&lt;p&gt;总的来说，&lt;code&gt;mmap&lt;/code&gt; 机制的本质是通过将文件或设备内容映射到虚拟内存，提供一种高效、灵活的内存访问和文件操作方式，同时充分利用操作系统的虚拟内存和页缓存功能。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="linux" scheme="https://xuechuang.cc/categories/linux/"/>
    
    
    <category term="mmap" scheme="https://xuechuang.cc/tags/mmap/"/>
    
  </entry>
  
  <entry>
    <title>NDK常用工具</title>
    <link href="https://xuechuang.cc/2024/01/21/NDK%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>https://xuechuang.cc/2024/01/21/NDK%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</id>
    <published>2024-01-21T06:24:31.000Z</published>
    <updated>2024-01-22T06:20:01.923Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;readelf&quot;&gt;&lt;a href=&quot;#readelf&quot; class=&quot;headerlink&quot; title=&quot;readelf&quot;&gt;&lt;/a&gt;readelf&lt;/h2&gt;&lt;p&gt;&lt;code&gt;readelf&lt;/code&gt; 是一个用于显示 ELF（Executable and Linkable Format）文件信息的命令行工具，它是 GNU Binutils 包的一部分。ELF 文件格式是在 Unix 系统上广泛使用的标准二进制格式，用于可执行文件、目标代码、共享库和核心转储（core dumps）。&lt;/p&gt;
&lt;p&gt;以下是 &lt;code&gt;readelf&lt;/code&gt; 的一些核心用法：&lt;/p&gt;
&lt;h3 id=&quot;查看文件头信息（File-Header）&quot;&gt;&lt;a href=&quot;#查看文件头信息（File-Header）&quot; class=&quot;headerlink&quot; title=&quot;查看文件头信息（File Header）&quot;&gt;&lt;/a&gt;查看文件头信息（File Header）&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;readelf -h &amp;lt;ELF file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个命令显示 ELF 文件的文件头信息，包括 ELF 类型（如可执行文件、共享对象等）、入口点地址、程序头表位置、段头表位置等。&lt;/p&gt;
&lt;h3 id=&quot;查看程序头表（Program-Headers）&quot;&gt;&lt;a href=&quot;#查看程序头表（Program-Headers）&quot; class=&quot;headerlink&quot; title=&quot;查看程序头表（Program Headers）&quot;&gt;&lt;/a&gt;查看程序头表（Program Headers）&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;readelf -l &amp;lt;ELF file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;程序头表描述了文件在内存中的映射。这个命令显示了每个段的信息，如类型（如 &lt;code&gt;LOAD&lt;/code&gt;、&lt;code&gt;DYNAMIC&lt;/code&gt; 等）、偏移、虚拟地址、物理地址、文件大小和内存大小等。&lt;/p&gt;
&lt;h3 id=&quot;查看段头表（Section-Headers）&quot;&gt;&lt;a href=&quot;#查看段头表（Section-Headers）&quot; class=&quot;headerlink&quot; title=&quot;查看段头表（Section Headers）&quot;&gt;&lt;/a&gt;查看段头表（Section Headers）&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;readelf -S &amp;lt;ELF file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;段头表包含了文件中所有段的信息。这个命令显示了每个段的名称、类型、地址、偏移、大小、链接信息、对齐和其他属性。&lt;/p&gt;
&lt;h3 id=&quot;查看符号表（Symbol-Table）&quot;&gt;&lt;a href=&quot;#查看符号表（Symbol-Table）&quot; class=&quot;headerlink&quot; title=&quot;查看符号表（Symbol Table）&quot;&gt;&lt;/a&gt;查看符号表（Symbol Table）&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;readelf -s &amp;lt;ELF file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;符号表包含了文件中的符号信息，如函数和变量名。这个命令显示了每个符号的名称、类型、大小、值（地址）和绑定信息。&lt;/p&gt;</summary>
    
    
    
    <category term="android" scheme="https://xuechuang.cc/categories/android/"/>
    
    
    <category term="symbols" scheme="https://xuechuang.cc/tags/symbols/"/>
    
    <category term="ndk" scheme="https://xuechuang.cc/tags/ndk/"/>
    
  </entry>
  
  <entry>
    <title>mac装机必备</title>
    <link href="https://xuechuang.cc/2024/01/18/mac%E8%A3%85%E6%9C%BA%E5%BF%85%E5%A4%87%E7%8E%AF%E5%A2%83/"/>
    <id>https://xuechuang.cc/2024/01/18/mac%E8%A3%85%E6%9C%BA%E5%BF%85%E5%A4%87%E7%8E%AF%E5%A2%83/</id>
    <published>2024-01-18T03:54:21.000Z</published>
    <updated>2025-08-05T08:26:35.807Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;软件工具&quot;&gt;&lt;a href=&quot;#软件工具&quot; class=&quot;headerlink&quot; title=&quot;软件工具&quot;&gt;&lt;/a&gt;软件工具&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;hombrew&lt;/code&gt; 包管理器 &lt;a href=&quot;https://brew.sh/&quot;&gt;https://brew.sh/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;iterm2&lt;/code&gt; 工具 &lt;a href=&quot;https://iterm2.com/&quot;&gt;https://iterm2.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;oh-my-zsh&lt;/code&gt; 插件 &lt;a href=&quot;https://ohmyz.sh/&quot;&gt;https://ohmyz.sh/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;git&lt;/code&gt; 命令行工具 &lt;code&gt;brew install git&lt;/code&gt; &lt;a href=&quot;https://git-scm.com/&quot;&gt;https://git-scm.com/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="mac装机必备" scheme="https://xuechuang.cc/categories/mac%E8%A3%85%E6%9C%BA%E5%BF%85%E5%A4%87/"/>
    
    
    <category term="mac装机必备" scheme="https://xuechuang.cc/tags/mac%E8%A3%85%E6%9C%BA%E5%BF%85%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>yuv转png命令</title>
    <link href="https://xuechuang.cc/2023/12/12/yuv%E8%BD%ACpng%E5%91%BD%E4%BB%A4/"/>
    <id>https://xuechuang.cc/2023/12/12/yuv%E8%BD%ACpng%E5%91%BD%E4%BB%A4/</id>
    <published>2023-12-11T16:47:43.000Z</published>
    <updated>2024-01-18T03:25:58.967Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>adb文档大全</title>
    <link href="https://xuechuang.cc/2023/12/12/adb%E6%96%87%E6%A1%A3%E5%A4%A7%E5%85%A8/"/>
    <id>https://xuechuang.cc/2023/12/12/adb%E6%96%87%E6%A1%A3%E5%A4%A7%E5%85%A8/</id>
    <published>2023-12-11T16:40:19.000Z</published>
    <updated>2024-01-18T03:25:58.964Z</updated>
    
    
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Android Debug Bridge version 1.0.41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Version 30.0.5-6877874&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;global-options&quot;&gt;&lt;a href=&quot;#global-options&quot; class=&quot;headerlink&quot; title=&quot;global options&quot;&gt;&lt;/a&gt;&lt;code&gt;global options&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-a         listen on all network interfaces, not just localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-d         use USB device (error if multiple devices connected)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-e         use TCP/IP device (error if multiple TCP/IP devices available)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-s SERIAL  use device with given serial (overrides $ANDROID_SERIAL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-t ID      use device with given transport id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-H         name of adb server host [default=localhost]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-P         port of adb server [default=5037]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;general-commands&quot;&gt;&lt;a href=&quot;#general-commands&quot; class=&quot;headerlink&quot; title=&quot;general commands&quot;&gt;&lt;/a&gt;&lt;code&gt;general commands&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;devices [-l]             list connected devices (-l for long output)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;help                     show this help message&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;version                  show version num&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>gradle参数传递踩坑</title>
    <link href="https://xuechuang.cc/2023/12/12/gradle%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E8%B8%A9%E5%9D%91/"/>
    <id>https://xuechuang.cc/2023/12/12/gradle%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E8%B8%A9%E5%9D%91/</id>
    <published>2023-12-11T16:28:58.000Z</published>
    <updated>2024-01-18T03:25:58.965Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;gradle 参数传递默认为 &lt;code&gt;string&lt;/code&gt; 类型&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>proguard指南</title>
    <link href="https://xuechuang.cc/2023/12/12/proguard%E6%8C%87%E5%8D%97/"/>
    <id>https://xuechuang.cc/2023/12/12/proguard%E6%8C%87%E5%8D%97/</id>
    <published>2023-12-11T16:26:16.000Z</published>
    <updated>2024-01-18T03:25:58.966Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h4 id=&quot;本地帮助手册&quot;&gt;&lt;a href=&quot;#本地帮助手册&quot; class=&quot;headerlink&quot; title=&quot;本地帮助手册&quot;&gt;&lt;/a&gt;本地帮助手册&lt;/h4&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>clion交叉编译</title>
    <link href="https://xuechuang.cc/2023/12/12/clion%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/"/>
    <id>https://xuechuang.cc/2023/12/12/clion%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</id>
    <published>2023-12-11T16:22:27.000Z</published>
    <updated>2024-01-18T03:25:58.964Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;编译 android 平台产物&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sql执行顺序</title>
    <link href="https://xuechuang.cc/2023/12/12/sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/"/>
    <id>https://xuechuang.cc/2023/12/12/sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</id>
    <published>2023-12-11T16:18:13.000Z</published>
    <updated>2024-01-18T03:25:58.966Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;MySQL中的SQL语句执行顺序，通常指的是查询（SELECT）语句的各个组成部分的逻辑执行顺序。虽然我们按照一定的语法顺序编写SQL语句，但是数据库系统在查询优化和执行过程中，并不是按照我们编写的顺序执行的。&lt;/p&gt;
&lt;p&gt;以下是一个典型的SELECT语句的编写顺序：&lt;/</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>准召率定义</title>
    <link href="https://xuechuang.cc/2023/12/12/%E5%87%86%E5%8F%AC%E7%8E%87%E5%AE%9A%E4%B9%89/"/>
    <id>https://xuechuang.cc/2023/12/12/%E5%87%86%E5%8F%AC%E7%8E%87%E5%AE%9A%E4%B9%89/</id>
    <published>2023-12-11T16:11:30.000Z</published>
    <updated>2024-01-18T03:25:58.967Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一个模型的好坏，要看它的准召率是否高。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义：准是准确率，召是召回率。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假设我们在验证一个反垃圾模型，1000个样本里面有500个垃圾，我们抓出了1个样本，且这个样本为垃圾。&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>音视频基础</title>
    <link href="https://xuechuang.cc/2023/12/12/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/"/>
    <id>https://xuechuang.cc/2023/12/12/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/</id>
    <published>2023-12-11T16:00:00.000Z</published>
    <updated>2024-01-18T03:25:58.969Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-模拟信号的数字化方法PCM&quot;&gt;&lt;a href=&quot;#1-模拟信号的数字化方法PCM&quot; class=&quot;headerlink&quot; title=&quot;1.模拟信号的数字化方法PCM&quot;&gt;&lt;/a&gt;1.模拟信号的数字化方法PCM&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.1 PCM的定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最基本的概念：&lt;strong&gt;模拟信号&lt;/strong&gt;是指随时间连续变化的物理量，将声音在磁带上记录成磁场强度的变化或在黑胶唱片上记录成沟槽大小的变化就是以模拟方式进行存储。&lt;strong&gt;数字信号&lt;/strong&gt;则是离散的，计算机中的数据都是以数字方式存储的。模拟信号和数字信号可以相互转换，这里我们讨论的就是把模拟信号转换成数字信号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;脉冲编码调制（Pulse Code Modulation, PCM）是一种模拟信号的数字化方法。&lt;/strong&gt;它是最常用、最简单的波形编码方式，但是也存在其它方法，比如脉冲密度调制（Pulse Density Modulation, PDM）。&lt;/p&gt;</summary>
    
    
    
    <category term="音视频" scheme="https://xuechuang.cc/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Android冷启动自动调试</title>
    <link href="https://xuechuang.cc/2023/12/11/Android%E5%86%B7%E5%90%AF%E5%8A%A8%E8%87%AA%E5%8A%A8%E8%B0%83%E8%AF%95/"/>
    <id>https://xuechuang.cc/2023/12/11/Android%E5%86%B7%E5%90%AF%E5%8A%A8%E8%87%AA%E5%8A%A8%E8%B0%83%E8%AF%95/</id>
    <published>2023-12-11T14:58:15.000Z</published>
    <updated>2024-01-18T03:25:58.964Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;1-选择调试程序&quot;&gt;&lt;a href=&quot;#1-选择调试程序&quot; class=&quot;headerlink&quot; title=&quot;1. 选择调试程序&quot;&gt;&lt;/a&gt;1. 选择调试程序&lt;/h3&gt;&lt;h3 id=&quot;2-打开等待调试程序开关&quot;&gt;&lt;a href=&quot;#2-打开等待调试程序开关&quot; class=&quot;headerlink&quot; title=&quot;2. 打开等待调试程序开关&quot;&gt;&lt;/a&gt;2. 打开等待调试程序开关&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/27w0zb.png&quot; alt=&quot;image-20231221151223098&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="调试" scheme="https://xuechuang.cc/categories/%E8%B0%83%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>ssh详解</title>
    <link href="https://xuechuang.cc/2023/09/06/ssh%E8%AF%A6%E8%A7%A3/"/>
    <id>https://xuechuang.cc/2023/09/06/ssh%E8%AF%A6%E8%A7%A3/</id>
    <published>2023-09-06T06:55:39.000Z</published>
    <updated>2024-01-18T03:25:58.966Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;https-wangdoc-com-ssh&quot;&gt;&lt;a href=&quot;#https-wangdoc-com-ssh&quot; class=&quot;headerlink&quot; title=&quot;https://wangdoc.com/ssh/&quot;&gt;&lt;/a&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VSCode-快捷键</title>
    <link href="https://xuechuang.cc/2023/09/06/VSCode-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://xuechuang.cc/2023/09/06/VSCode-%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2023-09-05T16:49:38.000Z</published>
    <updated>2024-01-18T03:25:58.964Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;打开终端&lt;/td&gt;
&lt;td&gt;⇧ ESC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;打开命令面板&lt;/td&gt;
&lt;td&gt;⌘ ⇧</summary>
        
      
    
    
    
    <category term="快捷键" scheme="https://xuechuang.cc/categories/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
    
    <category term="vscode" scheme="https://xuechuang.cc/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Android生成签名证书</title>
    <link href="https://xuechuang.cc/2023/08/30/Android%E7%94%9F%E6%88%90%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>https://xuechuang.cc/2023/08/30/Android%E7%94%9F%E6%88%90%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</id>
    <published>2023-08-30T03:33:16.000Z</published>
    <updated>2024-01-18T03:25:58.964Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;生成秘钥证书&quot;&gt;&lt;a href=&quot;#生成秘钥证书&quot; class=&quot;headerlink&quot; title=&quot;生成秘钥证书&quot;&gt;&lt;/a&gt;生成秘钥证书&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>shell 中各种括号的作用</title>
    <link href="https://xuechuang.cc/2023/06/24/shell-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/"/>
    <id>https://xuechuang.cc/2023/06/24/shell-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/</id>
    <published>2023-06-24T05:05:13.000Z</published>
    <updated>2024-01-18T03:25:58.966Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt; 菜鸟教程 &lt;a href=&quot;https://www.runoob.com/w3cnote/linux-shell-brackets-features.html&quot;&gt;https://www.runoob.com/w3cnote/linux-shell-brackets-features.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;和-96-96&quot;&gt;&lt;a href=&quot;#和-96-96&quot; class=&quot;headerlink&quot; title=&quot;$()和  &amp;#96;&amp;#96;&quot;&gt;&lt;/a&gt;&lt;code&gt;$()和 &lt;/code&gt; &amp;#96;&amp;#96;&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在 bash shell 中，$( ) 与` ` (反引号) 都是用来做命令替换用(commandsubstitution)的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例如   version=$(uname -r)和version=`uname -r`都可以是version得到内核的版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;各自的优缺点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1. `  ` 基本上可用在全部的 unix shell 中使用，若写成 shell script ，其移植性比较高。但反单引号容易打错或看错。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. $()并不是所有shell都支持。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;${ }&quot;&gt;&lt;/a&gt;&lt;code&gt;$&amp;#123; &amp;#125;&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123; &amp;#125;用于变量替换。一般情况下，$var 与$&amp;#123;var&amp;#125; 并没有啥不一样。但是用 $&amp;#123; &amp;#125; 会比较精确的界定变量名称的范围。比如&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ A=B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ echo $AB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;原本是打算先将 $A 的结果替换出来，然后再补一个 B 字母于其后，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;但在命令行上，真正的结果却是只会提换变量名称为 AB 的值出来…&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;若使用 $&amp;#123; &amp;#125; 就没问题了：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ echo $&amp;#123;A&amp;#125;B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123; &amp;#125;的功能远不止于此.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="shell" scheme="https://xuechuang.cc/categories/shell/"/>
    
    
    <category term="shell" scheme="https://xuechuang.cc/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell语法练习</title>
    <link href="https://xuechuang.cc/2023/06/23/shell%E8%AF%AD%E6%B3%95%E7%BB%83%E4%B9%A0/"/>
    <id>https://xuechuang.cc/2023/06/23/shell%E8%AF%AD%E6%B3%95%E7%BB%83%E4%B9%A0/</id>
    <published>2023-06-23T11:51:02.000Z</published>
    <updated>2024-01-18T03:25:58.966Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/exam/oj?page=1&amp;tab=SHELL%E7%AF%87&amp;topicId=195&quot;&gt;牛客网练习&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;查看可用的shell&quot;&gt;&lt;a href=&quot;#查看可用的shell&quot; class=&quot;headerlink&quot; title=&quot;查看可用的shell&quot;&gt;&lt;/a&gt;查看可用的shell&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat /etc/shells&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;shebang&quot;&gt;&lt;a href=&quot;#shebang&quot; class=&quot;headerlink&quot; title=&quot;shebang&quot;&gt;&lt;/a&gt;shebang&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta prompt_&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;!/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str=&amp;quot;hello world!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;定义字符串 $&amp;#123;str&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;字符串的长度为 $&amp;#123;#str&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;截取索引从1开始，长度为4的子串 $&amp;#123;str:1:4&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a=(234 2 3 4 5 6)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;定义数组 a=($&amp;#123;a[*]&amp;#125;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;数组的长度为 $&amp;#123;#a[*]&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;数组第一个元素的长度$&amp;#123;#a[0]&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="shell" scheme="https://xuechuang.cc/categories/shell/"/>
    
    
    <category term="shell" scheme="https://xuechuang.cc/tags/shell/"/>
    
  </entry>
  
</feed>
